{"version":3,"file":"static/js/855.98c93a9b.chunk.js","mappings":"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","sources":["component/cards/Card.js","component/expenses/ExpenseData.js","component/expenses/Expenses.js","component/toast/Toast.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./card.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Card({ title, children }) {\r\n  const themeDefault = useSelector((state) => state.theme.themeDefault);\r\n  return (\r\n    <div\r\n      className={`card ${themeDefault === true ? \"\" : \"text-white bg-dark\"}`}\r\n    >\r\n      <h5 className=\"card-header\">{title}</h5>\r\n      <div className=\"card-body\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { ToasterContext } from \"../context/toasterContext\";\r\nimport Toast from \"../toast/Toast\";\r\nimport del from \"../../delete.png\";\r\nimport edit from \"../../edit.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteExpense, fetchExpense } from \"../../reducers/expenseReducer\";\r\n\r\nexport default function ExpenseData({\r\n  amount,\r\n  description,\r\n  type,\r\n  id,\r\n  editHandler,\r\n}) {\r\n  const [show, setShow] = useState(false);\r\n  const [editId, setEditId] = useState(\"\");\r\n\r\n  const [editAmount, setEditAmount] = useState(amount);\r\n  const [editDescription, setEditDescription] = useState(description);\r\n  const [editType, setEditType] = useState(type);\r\n  const { isToaster, setIsToaster, isMessage, setIsMessage } =\r\n    useContext(ToasterContext);\r\n\r\n  const userEmail = useSelector((state) => state.auth.userEmail);\r\n  const dispatch = useDispatch();\r\n  const getExpense = useSelector((state) => state.addExpenses.userExpense);\r\n  const expenseTotal =\r\n    getExpense.reduce(\r\n      (total, expenseAmount) =>\r\n        parseInt(total) + parseInt(expenseAmount.amount),\r\n      0\r\n    ) - parseInt(amount);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const EditExpense = (id1) => {\r\n    setShow(true);\r\n    setEditId(id1);\r\n  };\r\n  const DeleteExpense = (id1) => {\r\n    //onDelete(id1);\r\n    const data = { id1, userEmail };\r\n    dispatch(deleteExpense(data));\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const patchData = {\r\n      amount: editAmount,\r\n      description: editDescription,\r\n      type: editType,\r\n    };\r\n    if (expenseTotal + parseInt(editAmount) <= 10000) {\r\n      fetch(\r\n        `https://expnse-tracker-default-rtdb.firebaseio.com/${userEmail\r\n          .split(\".\")\r\n          .join(\"\")}/${editId}.json`,\r\n        {\r\n          method: \"PATCH\",\r\n          body: JSON.stringify(patchData),\r\n        }\r\n      ).then((response) => {\r\n        if (response.ok) {\r\n          dispatch(fetchExpense(userEmail));\r\n          setShow(false);\r\n          setIsMessage({\r\n            message: \"your changes has been successfully saved\",\r\n            type: \"success\",\r\n          });\r\n          setIsToaster(true);\r\n        }\r\n      });\r\n    } else {\r\n      alert(\r\n        \"You need a premium service for adding more than a total expense of ₹10,000\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>₹ {amount}</td>\r\n        <td>{description}</td>\r\n        <td>{type}</td>\r\n        <td>\r\n          <span onClick={() => EditExpense(id)} style={{ cursor: \"pointer\" }}>\r\n            <img src={edit} alt=\"Edit\" style={{ backgroundColor: \"white\" }} />\r\n          </span>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span onClick={() => DeleteExpense(id)} style={{ cursor: \"pointer\" }}>\r\n            {\" \"}\r\n            <img src={del} alt=\"Delete\" style={{ backgroundColor: \"white\" }} />\r\n          </span>\r\n        </td>\r\n      </tr>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Expenses</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form\r\n            className=\"row row-cols-lg-auto g-3 align-items-center\"\r\n            onSubmit={onSubmitHandler}\r\n          >\r\n            <div className=\"col-12\">\r\n              <label\r\n                className=\"visually-hidden\"\r\n                htmlFor=\"inlineFormInputGroupUsername\"\r\n              >\r\n                Amount\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-text\">₹</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inlineFormInputGroupUsername\"\r\n                  placeholder=\"Amount\"\r\n                  name=\"amount\"\r\n                  value={editAmount}\r\n                  onChange={(evnet) => {\r\n                    setEditAmount(evnet.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <label\r\n                className=\"visually-hidden\"\r\n                htmlFor=\"inlineFormInputGroupUsername\"\r\n              >\r\n                Description\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-text\"></div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inlineFormInputGroupUsername\"\r\n                  placeholder=\"Description\"\r\n                  name=\"description\"\r\n                  value={editDescription}\r\n                  onChange={(event) => {\r\n                    setEditDescription(event.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12\">\r\n              <label className=\"visually-hidden\" htmlFor=\"inlineFormSelectPref\">\r\n                Expense Type\r\n              </label>\r\n              <select\r\n                className=\"form-select\"\r\n                id=\"inlineFormSelectPref\"\r\n                name=\"type\"\r\n                value={editType}\r\n                onChange={(event) => {\r\n                  setEditType(event.target.value);\r\n                }}\r\n              >\r\n                <option value={type}>{type}</option>\r\n                <option value=\"Food\">Food</option>\r\n                <option value=\"Petrol\">Petrol</option>\r\n                <option value=\"Movie\">Movie</option>\r\n                <option value=\"Shopping\">Shopping</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {isToaster && show && (\r\n        <Toast message={isMessage.message} type={isMessage.type} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Card from \"../cards/Card\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport { ToasterContext } from \"../context/toasterContext\";\r\nimport Toast from \"../toast/Toast\";\r\nimport \"./expense.css\";\r\nimport ExpenseData from \"./ExpenseData\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchExpense, postExpense } from \"../../reducers/expenseReducer\";\r\n\r\nexport default function Expenses() {\r\n  const { isToaster, isMessage } = useContext(ToasterContext);\r\n  const dispatch = useDispatch();\r\n  const userEmail = useSelector((state) => state.auth.userEmail);\r\n  console.log(userEmail);\r\n\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const getExpense = useSelector((state) => state.addExpenses.userExpense);\r\n  const expenseTotal = getExpense.reduce(\r\n    (total, expenseAmount) => parseInt(total) + parseInt(expenseAmount.amount),\r\n    0\r\n  );\r\n\r\n  const onSubmithandler = (event) => {\r\n    const data = {\r\n      userEmail,\r\n      amount,\r\n      type,\r\n      description,\r\n    };\r\n    event.preventDefault();\r\n    if (expenseTotal + parseInt(amount) <= 10000) {\r\n      dispatch(postExpense(data));\r\n    } else {\r\n      console.log(expenseTotal + amount);\r\n      alert(\r\n        \"You need a premium service for adding more than a total expense of ₹10,000\"\r\n      );\r\n    }\r\n  };\r\n  const headers = [\r\n    { label: \"Amount\", key: \"amount\" },\r\n    { label: \"Desctription\", key: \"description\" },\r\n    { label: \"Type\", key: \"type\" },\r\n  ];\r\n\r\n  const data = getExpense;\r\n\r\n  console.log(useSelector((state) => state));\r\n\r\n  useEffect(() => {\r\n    //onRefreshDataLoad();\r\n    dispatch(fetchExpense(userEmail));\r\n  }, [userEmail, dispatch]);\r\n  const premium = useSelector((state) => state.premium.permiumService);\r\n  const themeDefault = useSelector((state) => state.theme.themeDefault);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"expenses\">\r\n        <Card title=\"Expenses\">\r\n          {premium && (\r\n            <CSVLink data={data} headers={headers} filename=\"Expense\">\r\n              Download Your Report\r\n            </CSVLink>\r\n          )}\r\n          <form\r\n            className=\"row row-cols-lg-auto g-3 align-items-center\"\r\n            onSubmit={onSubmithandler}\r\n          >\r\n            <div className=\"col-3\">\r\n              <label\r\n                className=\"visually-hidden\"\r\n                htmlFor=\"inlineFormInputGroupUsername\"\r\n              >\r\n                Amount\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-text\">₹</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inlineFormInputGroupUsername\"\r\n                  placeholder=\"Amount\"\r\n                  name=\"amount\"\r\n                  value={amount}\r\n                  onChange={(evnet) => {\r\n                    setAmount(evnet.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <label\r\n                className=\"visually-hidden\"\r\n                htmlFor=\"inlineFormInputGroupUsername\"\r\n              >\r\n                Description\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-text\"></div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inlineFormInputGroupUsername\"\r\n                  placeholder=\"Description\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={(event) => {\r\n                    setDescription(event.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-3\">\r\n              <label className=\"visually-hidden\" htmlFor=\"inlineFormSelectPref\">\r\n                Expense Type\r\n              </label>\r\n              <select\r\n                className=\"form-select\"\r\n                id=\"inlineFormSelectPref\"\r\n                name=\"type\"\r\n                value={type}\r\n                onChange={(event) => {\r\n                  setType(event.target.value);\r\n                }}\r\n              >\r\n                <option value={type}>{type}</option>\r\n                <option value=\"Food\">Food</option>\r\n                <option value=\"Petrol\">Petrol</option>\r\n                <option value=\"Movie\">Movie</option>\r\n                <option value=\"Shopping\">Shopping</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"col-3\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <hr />\r\n          <table\r\n            className={`table table-striped table-hover ${\r\n              themeDefault === true ? \"table-light\" : \"table-dark\"\r\n            }`}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Amount</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Type</th>\r\n                <th scope=\"col\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getExpense.map((data) => {\r\n                return (\r\n                  <ExpenseData\r\n                    amount={data.amount}\r\n                    description={data.description}\r\n                    type={data.type}\r\n                    key={data.id}\r\n                    id={data.id}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </Card>\r\n      </div>\r\n      {isToaster && <Toast message={isMessage.message} type={isMessage.type} />}\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { ToasterContext } from \"../context/toasterContext\";\r\n\r\nexport default function Toast({ message, type }) {\r\n  const { setIsToaster, isToaster } = useContext(ToasterContext);\r\n  const onToasterClose = () => {\r\n    setIsToaster(false);\r\n  };\r\n  useEffect(() => {\r\n    if (isToaster) {\r\n      setInterval(() => {\r\n        setIsToaster(false);\r\n      }, 5000);\r\n    }\r\n  }, [isToaster, setIsToaster]);\r\n  return (\r\n    <div\r\n      className={`toast show align-items-center text-white bg-${type} border-0 position-absolute top-50 end-0`}\r\n      role=\"alert\"\r\n      aria-live=\"assertive\"\r\n      aria-atomic=\"true\"\r\n    >\r\n      <div className=\"d-flex\">\r\n        <div class=\"toast-body\">{message}</div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close btn-close-white  me-2 m-auto\"\r\n          data-bs-dismiss=\"toast\"\r\n          aria-label=\"Close\"\r\n          onClick={onToasterClose}\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Card","title","children","themeDefault","useSelector","state","theme","className","ExpenseData","amount","description","type","id","editHandler","useState","show","setShow","editId","setEditId","editAmount","setEditAmount","editDescription","setEditDescription","editType","setEditType","useContext","ToasterContext","isToaster","setIsToaster","isMessage","setIsMessage","userEmail","auth","dispatch","useDispatch","expenseTotal","addExpenses","userExpense","reduce","total","expenseAmount","parseInt","onClick","id1","style","cursor","src","alt","backgroundColor","data","deleteExpense","DeleteExpense","Modal","onHide","backdrop","keyboard","closeButton","onSubmit","event","preventDefault","patchData","fetch","split","join","method","body","JSON","stringify","then","response","ok","fetchExpense","message","alert","htmlFor","placeholder","name","value","onChange","evnet","target","class","Toast","Expenses","console","log","setAmount","setType","setDescription","getExpense","useEffect","premium","permiumService","CSVLink","headers","label","key","filename","postExpense","scope","map","setInterval","role"],"sourceRoot":""}